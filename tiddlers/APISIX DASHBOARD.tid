created: 20230705015115320
creator: TidGi User
modified: 20230705053708831
modifier: TidGi User
tags: API网关
title: APISIX DASHBOARD
type: text/vnd.tiddlywiki
wysiwyg: yes

服务器 10.0.59.198

! ! ''使用命令行''

创建路由route, 带上游upstream
执行成功

!! ''使用控制面板''

创建上游, 使用服务发现, 需要在apisix主配置文件中添加discovery:nacos配置
注意prefix是nacos接口路径, 必须为''/nacos/v1''

创建路由, 使用添加好的上游服务, 根据负载均衡算法, 重试次数等配置, 会遍历nacos服务下的节点
且会记录执行成功的节点, 优先调用

!! ''后续计划''

''对标产品:'' ''飞书开放平台''

''交付内容:'' 1、提供可用框架，ui设计
					2、提供标准平台和产品API和SDK
					3、使用手册

''目前进度:'' 1、网关采用 apisix, 技术栈为nginx,lua,etcd
						1.1 请求变形, 统一包装对外的接口地址, 请求头
						1.2 流量控制, 插件形式实现, 已测试
						1.3 身份验证, 插件形式实现, 未测试
						1.4 安全防护, 插件形式实现, 未测试
						1.5 可观测性, 插件形式实现, 未测试
						1.6 支持服务发现, nacos,consul,zookeeper, 已测试nacos
						''注意:''后续需改用apisix-seed组件, 这些集成都是在数据面上完成的，一旦你的数据面节点非常多，这对于后续的服务发现组件压力是非常大的。APISIX 3.0 中，通过新增一个子项目 apisix-seed 进行了一层抽象，实现了控制层面的服务发现支持，降低了对服务发现组件的压力。
						1.7 热加载, 全动态能力, 弥补nginx修改配置重启, 效率比kong, gateway更高, 接近原生nginx能支撑5万并发链接
						1.8 k8s ingress, 支持原生KubernetesCRD
						1.9 etcd的高可用, 再控制面达到毫秒级别的变化通知
						1.10 运维友好, kong的控制面板收费, gateway需要嵌入代码
						1.11 长期发展考虑 Apisix和gateway搭配使用，流量网关使用Apisix，业务网关使用gateway，使用流量网关对公网入口流量进行转发到业务网关，再由业务网关将请求转发至各个系统。
						gateway替换为apisix:
						[ext[https://www.zhihu.com/question/591390184]]
						nginx,kong,apisix,gateway网关比较:
						[ext[https://blog.csdn.net/VivianStark/article/details/130670946]]
						apisix3.0介绍:
						[ext[https://cloud.tencent.com/developer/article/2242316?areaSource=102001.12&traceId=njM02U14wZqi5xcp9PCNM]]
						1.12 支持openapi 3.0规范 导入导出
						1.13 其他插件支持的若干功能, grpc、serverless、skywalking、kafka、es, 身份验证、证书卸载、日志分析和可观测性
						xRPC 四层协议拓展框架

2、文档采用 docusaurus, 技术栈为react, mdx, jsx
					2.1 
					
					3、

''拆解任务:'' 1、提供所有openapi列表,按照颗粒度,3DPlaza为第一级,其次服务,模块,功能,具体接口,是否按照规范在yapi方便生成md文档
							2、根据openapi列表配置apisix
							3、gateway网关鉴权方式

''暂不考虑:'' ui,前端,实现的效果差